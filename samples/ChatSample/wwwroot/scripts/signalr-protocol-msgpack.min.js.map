{"version":3,"sources":["../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../src/BinaryMessageFormat.ts","../../src/MessagePackHubProtocol.ts","../../src/index.ts","../../src/browser-index.ts"],"names":["byteLength_1","byteLength","toByteArray_1","toByteArray","fromByteArray_1","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","placeHoldersCount","b64","Error","l","tmp","placeHolders","arr","L","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","__proto__","prototype","foo","createBuffer","RangeError","buf","arg","encodingOrOffset","allocUnsafe","from","Symbol","species","Object","defineProperty","configurable","enumerable","writable","poolSize","TypeError","isArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","allocUnsafeSlow","string","isEncoding","actual","slice","fromArrayLike","array","byteOffset","obj","isBuffer","copy","isArrayBufferView","numberIsNaN","type","isArray","data","toString","b","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","loweredCase","utf8ToBytes","base64ToBytes","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","arguments","apply","equals","inspect","str","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","call","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","base64","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","subarray","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","ieee754","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","trim","replace","units","leadSurrogate","byteArray","hi","lo","src","dst","ArrayBuffer","constructor","name","isView","BinaryMessageFormat","lenBuffer","sizePart","parse","input","result","uint8Array","maxLengthPrefixSize","numBitsToShift","numBytes","byteRead","MessagePackHubProtocol","version","transferFormat","signalr_1","Binary","parseMessages","logger","_this","instance","BinaryMessageFormat_1","map","parseMessage","msgpack","msgpack5","properties","decode","buffer_1","messageType","createInvocationMessage","readHeaders","createStreamItemMessage","createCompletionMessage","createPingMessage","createCloseMessage","Information","headers","invocationId","item","errorResult","voidResult","nonVoidResult","resultKind","completionMessage","writeMessage","message","writeInvocation","writeStreamInvocation","invocationMessage","payload","encode","streamInvocationMessage","MessagePackHubProtocol_1","__export","cjs"],"mappings":"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","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (isArrayBufferView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (isArrayBufferView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\n// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`\nfunction isArrayBufferView (obj) {\n  return (typeof ArrayBuffer.isView === 'function') && ArrayBuffer.isView(obj)\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nexport class BinaryMessageFormat {\r\n\r\n    // The length prefix of binary messages is encoded as VarInt. Read the comment in\r\n    // the BinaryMessageParser.TryParseMessage for details.\r\n\r\n    public static write(output: Uint8Array): ArrayBuffer {\r\n        // msgpack5 uses returns Buffer instead of Uint8Array on IE10 and some other browser\r\n        //  in which case .byteLength does will be undefined\r\n        let size = output.byteLength || output.length;\r\n        const lenBuffer = [];\r\n        do {\r\n            let sizePart = size & 0x7f;\r\n            size = size >> 7;\r\n            if (size > 0) {\r\n                sizePart |= 0x80;\r\n            }\r\n            lenBuffer.push(sizePart);\r\n        }\r\n        while (size > 0);\r\n\r\n        // msgpack5 uses returns Buffer instead of Uint8Array on IE10 and some other browser\r\n        //  in which case .byteLength does will be undefined\r\n        size = output.byteLength || output.length;\r\n\r\n        const buffer = new Uint8Array(lenBuffer.length + size);\r\n        buffer.set(lenBuffer, 0);\r\n        buffer.set(output, lenBuffer.length);\r\n        return buffer.buffer;\r\n    }\r\n\r\n    public static parse(input: ArrayBuffer): Uint8Array[] {\r\n        const result: Uint8Array[] = [];\r\n        const uint8Array = new Uint8Array(input);\r\n        const maxLengthPrefixSize = 5;\r\n        const numBitsToShift = [0, 7, 14, 21, 28 ];\r\n\r\n        for (let offset = 0; offset < input.byteLength;) {\r\n            let numBytes = 0;\r\n            let size = 0;\r\n            let byteRead;\r\n            do {\r\n                byteRead = uint8Array[offset + numBytes];\r\n                size = size | ((byteRead & 0x7f) << (numBitsToShift[numBytes]));\r\n                numBytes++;\r\n            }\r\n            while (numBytes < Math.min(maxLengthPrefixSize, input.byteLength - offset) && (byteRead & 0x80) !== 0);\r\n\r\n            if ((byteRead & 0x80) !== 0 && numBytes < maxLengthPrefixSize) {\r\n                throw new Error(\"Cannot read message size.\");\r\n            }\r\n\r\n            if (numBytes === maxLengthPrefixSize && byteRead > 7) {\r\n                throw new Error(\"Messages bigger than 2GB are not supported.\");\r\n            }\r\n\r\n            if (uint8Array.byteLength >= (offset + numBytes + size)) {\r\n                // IE does not support .slice() so use subarray\r\n                result.push(uint8Array.slice\r\n                    ? uint8Array.slice(offset + numBytes, offset + numBytes + size)\r\n                    : uint8Array.subarray(offset + numBytes, offset + numBytes + size));\r\n            } else {\r\n                throw new Error(\"Incomplete message.\");\r\n            }\r\n\r\n            offset = offset + numBytes + size;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { Buffer } from \"buffer\";\r\nimport * as msgpack5 from \"msgpack5\";\r\n\r\nimport { CompletionMessage, HubMessage, IHubProtocol, ILogger, InvocationMessage, LogLevel, MessageHeaders, MessageType, NullLogger, StreamInvocationMessage, StreamItemMessage, TransferFormat } from \"@aspnet/signalr\";\r\n\r\nimport { BinaryMessageFormat } from \"./BinaryMessageFormat\";\r\n\r\nexport class MessagePackHubProtocol implements IHubProtocol {\r\n\r\n    public readonly name: string = \"messagepack\";\r\n    public readonly version: number = 1;\r\n\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Binary;\r\n\r\n    public parseMessages(input: ArrayBuffer, logger: ILogger): HubMessage[] {\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        return BinaryMessageFormat.parse(input).map((m) => this.parseMessage(m, logger));\r\n    }\r\n\r\n    private parseMessage(input: Uint8Array, logger: ILogger): HubMessage {\r\n        if (input.length === 0) {\r\n            throw new Error(\"Invalid payload.\");\r\n        }\r\n\r\n        const msgpack = msgpack5();\r\n        const properties = msgpack.decode(new Buffer(input));\r\n        if (properties.length === 0 || !(properties instanceof Array)) {\r\n            throw new Error(\"Invalid payload.\");\r\n        }\r\n\r\n        const messageType = properties[0] as MessageType;\r\n\r\n        switch (messageType) {\r\n            case MessageType.Invocation:\r\n                return this.createInvocationMessage(this.readHeaders(properties), properties);\r\n            case MessageType.StreamItem:\r\n                return this.createStreamItemMessage(this.readHeaders(properties), properties);\r\n            case MessageType.Completion:\r\n                return this.createCompletionMessage(this.readHeaders(properties), properties);\r\n            case MessageType.Ping:\r\n                return this.createPingMessage(properties);\r\n            case MessageType.Close:\r\n                return this.createCloseMessage(properties);\r\n            default:\r\n                // Future protocol changes can add message types, old clients can ignore them\r\n                logger.log(LogLevel.Information, \"Unknown message type '\" + messageType + \"' ignored.\");\r\n                return null;\r\n        }\r\n    }\r\n\r\n    private createCloseMessage(properties: any[]): HubMessage {\r\n        // check minimum length to allow protocol to add items to the end of objects in future releases\r\n        if (properties.length < 2) {\r\n            throw new Error(\"Invalid payload for Close message.\");\r\n        }\r\n\r\n        return {\r\n            // Close messages have no headers.\r\n            error: properties[1],\r\n            type: MessageType.Close,\r\n        } as HubMessage;\r\n    }\r\n\r\n    private createPingMessage(properties: any[]): HubMessage {\r\n        // check minimum length to allow protocol to add items to the end of objects in future releases\r\n        if (properties.length < 1) {\r\n            throw new Error(\"Invalid payload for Ping message.\");\r\n        }\r\n\r\n        return {\r\n            // Ping messages have no headers.\r\n            type: MessageType.Ping,\r\n        } as HubMessage;\r\n    }\r\n\r\n    private createInvocationMessage(headers: MessageHeaders, properties: any[]): InvocationMessage {\r\n        // check minimum length to allow protocol to add items to the end of objects in future releases\r\n        if (properties.length < 5) {\r\n            throw new Error(\"Invalid payload for Invocation message.\");\r\n        }\r\n\r\n        const invocationId = properties[2] as string;\r\n        if (invocationId) {\r\n            return {\r\n                arguments: properties[4],\r\n                headers,\r\n                invocationId,\r\n                target: properties[3] as string,\r\n                type: MessageType.Invocation,\r\n            };\r\n        } else {\r\n            return {\r\n                arguments: properties[4],\r\n                headers,\r\n                target: properties[3],\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n    private createStreamItemMessage(headers: MessageHeaders, properties: any[]): StreamItemMessage {\r\n        // check minimum length to allow protocol to add items to the end of objects in future releases\r\n        if (properties.length < 4) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n\r\n        return {\r\n            headers,\r\n            invocationId: properties[2],\r\n            item: properties[3],\r\n            type: MessageType.StreamItem,\r\n        } as StreamItemMessage;\r\n    }\r\n\r\n    private createCompletionMessage(headers: MessageHeaders, properties: any[]): CompletionMessage {\r\n        // check minimum length to allow protocol to add items to the end of objects in future releases\r\n        if (properties.length < 4) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        const errorResult = 1;\r\n        const voidResult = 2;\r\n        const nonVoidResult = 3;\r\n\r\n        const resultKind = properties[3];\r\n\r\n        if (resultKind !== voidResult && properties.length < 5) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        const completionMessage = {\r\n            error: null as string,\r\n            headers,\r\n            invocationId: properties[2],\r\n            result: null as any,\r\n            type: MessageType.Completion,\r\n        };\r\n\r\n        switch (resultKind) {\r\n            case errorResult:\r\n                completionMessage.error = properties[4];\r\n                break;\r\n            case nonVoidResult:\r\n                completionMessage.result = properties[4];\r\n                break;\r\n        }\r\n\r\n        return completionMessage as CompletionMessage;\r\n    }\r\n\r\n    public writeMessage(message: HubMessage): ArrayBuffer {\r\n        switch (message.type) {\r\n            case MessageType.Invocation:\r\n                return this.writeInvocation(message as InvocationMessage);\r\n            case MessageType.StreamInvocation:\r\n                return this.writeStreamInvocation(message as StreamInvocationMessage);\r\n            case MessageType.StreamItem:\r\n            case MessageType.Completion:\r\n                throw new Error(`Writing messages of type '${message.type}' is not supported.`);\r\n            default:\r\n                throw new Error(\"Invalid message type.\");\r\n        }\r\n    }\r\n\r\n    private writeInvocation(invocationMessage: InvocationMessage): ArrayBuffer {\r\n        const msgpack = msgpack5();\r\n        const payload = msgpack.encode([MessageType.Invocation, invocationMessage.headers || {}, invocationMessage.invocationId || null,\r\n        invocationMessage.target, invocationMessage.arguments]);\r\n\r\n        return BinaryMessageFormat.write(payload.slice());\r\n    }\r\n\r\n    private writeStreamInvocation(streamInvocationMessage: StreamInvocationMessage): ArrayBuffer {\r\n        const msgpack = msgpack5();\r\n        const payload = msgpack.encode([MessageType.StreamInvocation, streamInvocationMessage.headers || {}, streamInvocationMessage.invocationId,\r\n        streamInvocationMessage.target, streamInvocationMessage.arguments]);\r\n\r\n        return BinaryMessageFormat.write(payload.slice());\r\n    }\r\n\r\n    private readHeaders(properties: any): MessageHeaders {\r\n        const headers: MessageHeaders = properties[1] as MessageHeaders;\r\n        if (typeof headers !== \"object\") {\r\n            throw new Error(\"Invalid headers.\");\r\n        }\r\n        return headers;\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nexport { MessagePackHubProtocol } from \"./MessagePackHubProtocol\";\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// This is where we add any polyfills we'll need for the browser. It is the entry module for browser-specific builds.\r\n\r\nexport * from \"./index\";\r\n"]}